name: app-engine

env:
  GCLOUD_PROJECT_ID: kvaapagarrot

on:
  push:
    branches:
      - main-kampf
  pull_request:
    branches:
      - main-kampf

jobs:
  deploy-gae:
    name: App Engine Deployment
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      version-url: ${{ steps.version-url.outputs.url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Import Service Account key
        run: echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" | base64 -d > /tmp/auth.json

      - name: GCloud Auth
        run: |
          gcloud --quiet auth \
          activate-service-account "${{ secrets.GCP_SA_EMAIL }}" \
          --key-file=/tmp/auth.json \
          --project="${GCLOUD_PROJECT_ID}"

      - name: Deploy
        run: |
          gcloud app deploy app.yaml --quiet -v "${GITHUB_ACTOR}-${GITHUB_SHA:0:7}"

      - id: version-url
        name: Get deployed app version URL
        run: |
          VERSION_URL=$(gcloud app versions describe "${GITHUB_ACTOR}-${GITHUB_SHA:0:7}" --service=default --format "value(versionUrl)")
          echo $VERSION_URL
          echo "::set-output name=url::$(echo $VERSION_URL)"

  lighthouse:
    name: Lighthouse Audit
    runs-on: ubuntu-latest
    # Run only after successful deployment
    needs: [deploy-gae]
    env:
      LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
      LHCI_BUILD_CONTEXT__CURRENT_HASH: ${{ github.sha }}

    steps:
      - name: Set Lighthouse CI config
        run: |
          echo '{"ci":{"assert":{"preset":"lighthouse:recommended","assertions":{"render-blocking-resources":["warn",{"maxLength":0}],"offline-start-url":"off","service-worker":"off","unused-javascript":["warn",{"maxLength":2}],"works-offline":"off"}}}}' \
          > "$GITHUB_WORKSPACE/lighthouserc.json"

      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v3
        with:
          urls: |
            ${{needs.deploy-gae.outputs.version-url}}
          uploadArtifacts: true # save results as an action artifacts
          temporaryPublicStorage: true # upload lighthouse report to the temporary storage
          configPath: ${{ github.workspace }}/lighthouserc.json
